{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { BASE_URL, PRODUCT_URL } from \"../constants\";\nexport const fetchAllProducts = createAsyncThunk('fetch/products', async () => {\n  const response = await axios(`${BASE_URL}${PRODUCT_URL}`);\n  return response.data;\n});\nconst initialState = {\n  products: [],\n  status: 'idle',\n  error: null\n};\nconst productApiSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase();\n  }\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","BASE_URL","PRODUCT_URL","fetchAllProducts","response","data","initialState","products","status","error","productApiSlice","name","reducers","extraReducers","builder","addCase"],"sources":["/home/user1/Documents/GitHub/E_Commerce_MERN/frontend/src/slices/productsApiSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { BASE_URL, PRODUCT_URL } from \"../constants\";\n\nexport const fetchAllProducts=createAsyncThunk('fetch/products',async()=>{\n    const response=await axios(`${BASE_URL}${PRODUCT_URL}`);\n    return response.data\n})\nconst initialState={\n    products:[],\n    status:'idle',\n    error:null\n}\nconst productApiSlice=createSlice({\n    name:'products',\n    initialState,\n    reducers:{},\n    extraReducers:builder=>{\n        builder.addCase()\n    }\n})"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,cAAc;AAEpD,OAAO,MAAMC,gBAAgB,GAACL,gBAAgB,CAAC,gBAAgB,EAAC,YAAS;EACrE,MAAMM,QAAQ,GAAC,MAAMJ,KAAK,CAAE,GAAEC,QAAS,GAAEC,WAAY,EAAC,CAAC;EACvD,OAAOE,QAAQ,CAACC,IAAI;AACxB,CAAC,CAAC;AACF,MAAMC,YAAY,GAAC;EACfC,QAAQ,EAAC,EAAE;EACXC,MAAM,EAAC,MAAM;EACbC,KAAK,EAAC;AACV,CAAC;AACD,MAAMC,eAAe,GAACX,WAAW,CAAC;EAC9BY,IAAI,EAAC,UAAU;EACfL,YAAY;EACZM,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAACC,OAAO,IAAE;IACnBA,OAAO,CAACC,OAAO,CAAC,CAAC;EACrB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}