{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : {\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = action.payload;\n      const existingItem = state.cartItems.finc(x => x._i);\n    }\n  }\n});\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","localStorage","getItem","JSON","parse","cartItems","cartSlice","name","reducers","addToCart","state","action","item","payload","existingItem","finc","x","_i","reducer"],"sources":["/home/user1/Documents/GitHub/E_Commerce_MERN/frontend/src/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = localStorage.getItem('cart')\n  ? JSON.parse(localStorage.getItem('cart'))\n  : { cartItems: [] };\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart:(state,action)=>{\n        const item=action.payload\n\n        const existingItem=state.cartItems.finc(x=>x._i)\n    }\n  },\n});\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAC7CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GACxC;EAAEG,SAAS,EAAE;AAAG,CAAC;AACrB,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,SAAS,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MACtB,MAAMC,IAAI,GAACD,MAAM,CAACE,OAAO;MAEzB,MAAMC,YAAY,GAACJ,KAAK,CAACL,SAAS,CAACU,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,EAAE,CAAC;IACpD;EACF;AACF,CAAC,CAAC;AAEF,eAAeX,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}